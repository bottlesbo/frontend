{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst useQuery = () => {\n  _s();\n\n  const [URLSearchParams, setURLSearchParams] = useSearchParams();\n  const params = React.useMemo(() => {\n    return Array.from(URLSearchParams.entries()).reduce((acc, _ref) => {\n      let [key, value] = _ref;\n      acc[key] = value;\n      return acc;\n    }, {});\n  }, [URLSearchParams]);\n  const setParams = React.useCallback(data => {\n    Object.entries(data).forEach(_ref2 => {\n      let [key, value] = _ref2;\n\n      if (!value) {\n        return URLSearchParams.delete(key);\n      }\n\n      URLSearchParams.set(key, value);\n    });\n    setURLSearchParams(URLSearchParams);\n  }, [URLSearchParams, setURLSearchParams]);\n  const data = React.useMemo(() => {\n    return [params, setParams];\n  }, [params, setParams]);\n  return data;\n};\n\n_s(useQuery, \"+8n43knAMbAoz7Bea54fRavHUOI=\", false, function () {\n  return [useSearchParams];\n});\n\nexport default useQuery;","map":{"version":3,"names":["React","useSearchParams","useQuery","URLSearchParams","setURLSearchParams","params","useMemo","Array","from","entries","reduce","acc","key","value","setParams","useCallback","data","Object","forEach","delete","set"],"sources":["/home/father/bookstore/frontend/src/utils/useQuery.ts"],"sourcesContent":["import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst useQuery = <QueryType extends object>() => {\n  const [URLSearchParams, setURLSearchParams] = useSearchParams();\n\n  const params = React.useMemo(() => {\n    return Array.from(URLSearchParams.entries()).reduce((acc, [key, value]) => {\n      acc[key] = value;\n      return acc;\n    }, {} as Record<string, string>) as QueryType;\n  }, [URLSearchParams]);\n\n  const setParams = React.useCallback((data: Partial<QueryType>) => {\n    Object.entries(data).forEach(([key, value]) => {\n      if (!value) {\n        return URLSearchParams.delete(key);\n      }\n      URLSearchParams.set(key, value as string);\n    });\n    setURLSearchParams(URLSearchParams);\n  }, [URLSearchParams, setURLSearchParams]);\n\n  const data: [QueryType, typeof setParams] = React.useMemo(() => {\n    return [params, setParams];\n  }, [params, setParams]);\n\n  return data;\n};\n\nexport default useQuery;\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,kBAAhC;;AAEA,MAAMC,QAAQ,GAAG,MAAgC;EAAA;;EAC/C,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCH,eAAe,EAA7D;EAEA,MAAMI,MAAM,GAAGL,KAAK,CAACM,OAAN,CAAc,MAAM;IACjC,OAAOC,KAAK,CAACC,IAAN,CAAWL,eAAe,CAACM,OAAhB,EAAX,EAAsCC,MAAtC,CAA6C,CAACC,GAAD,WAAuB;MAAA,IAAjB,CAACC,GAAD,EAAMC,KAAN,CAAiB;MACzEF,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;MACA,OAAOF,GAAP;IACD,CAHM,EAGJ,EAHI,CAAP;EAID,CALc,EAKZ,CAACR,eAAD,CALY,CAAf;EAOA,MAAMW,SAAS,GAAGd,KAAK,CAACe,WAAN,CAAmBC,IAAD,IAA8B;IAChEC,MAAM,CAACR,OAAP,CAAeO,IAAf,EAAqBE,OAArB,CAA6B,SAAkB;MAAA,IAAjB,CAACN,GAAD,EAAMC,KAAN,CAAiB;;MAC7C,IAAI,CAACA,KAAL,EAAY;QACV,OAAOV,eAAe,CAACgB,MAAhB,CAAuBP,GAAvB,CAAP;MACD;;MACDT,eAAe,CAACiB,GAAhB,CAAoBR,GAApB,EAAyBC,KAAzB;IACD,CALD;IAMAT,kBAAkB,CAACD,eAAD,CAAlB;EACD,CARiB,EAQf,CAACA,eAAD,EAAkBC,kBAAlB,CARe,CAAlB;EAUA,MAAMY,IAAmC,GAAGhB,KAAK,CAACM,OAAN,CAAc,MAAM;IAC9D,OAAO,CAACD,MAAD,EAASS,SAAT,CAAP;EACD,CAF2C,EAEzC,CAACT,MAAD,EAASS,SAAT,CAFyC,CAA5C;EAIA,OAAOE,IAAP;AACD,CAzBD;;GAAMd,Q;UAC0CD,e;;;AA0BhD,eAAeC,QAAf"},"metadata":{},"sourceType":"module"}