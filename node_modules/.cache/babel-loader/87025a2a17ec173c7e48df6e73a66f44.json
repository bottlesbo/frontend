{"ast":null,"code":"import _slicedToArray from\"/home/fusion/workspace/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{useSearchParams}from'react-router-dom';var useQuery=function useQuery(){var _useSearchParams=useSearchParams(),_useSearchParams2=_slicedToArray(_useSearchParams,2),URLSearchParams=_useSearchParams2[0],setURLSearchParams=_useSearchParams2[1];var params=React.useMemo(function(){return Array.from(URLSearchParams.entries()).reduce(function(acc,_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],value=_ref2[1];acc[key]=value;return acc;},{});},[URLSearchParams]);var setParams=React.useCallback(function(data){Object.entries(data).forEach(function(_ref3){var _ref4=_slicedToArray(_ref3,2),key=_ref4[0],value=_ref4[1];if(!value){return URLSearchParams.delete(key);}URLSearchParams.set(key,value);});setURLSearchParams(URLSearchParams);},[URLSearchParams,setURLSearchParams]);var data=React.useMemo(function(){return[params,setParams];},[params,setParams]);return data;};export default useQuery;","map":{"version":3,"names":["React","useSearchParams","useQuery","URLSearchParams","setURLSearchParams","params","useMemo","Array","from","entries","reduce","acc","key","value","setParams","useCallback","data","Object","forEach","delete","set"],"sources":["/home/fusion/workspace/frontend/src/utils/useQuery.ts"],"sourcesContent":["import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst useQuery = <QueryType extends object>() => {\n  const [URLSearchParams, setURLSearchParams] = useSearchParams();\n\n  const params = React.useMemo(() => {\n    return Array.from(URLSearchParams.entries()).reduce((acc, [key, value]) => {\n      acc[key] = value;\n      return acc;\n    }, {} as Record<string, string>) as QueryType;\n  }, [URLSearchParams]);\n\n  const setParams = React.useCallback((data: Partial<QueryType>) => {\n    Object.entries(data).forEach(([key, value]) => {\n      if (!value) {\n        return URLSearchParams.delete(key);\n      }\n      URLSearchParams.set(key, value as string);\n    });\n    setURLSearchParams(URLSearchParams);\n  }, [URLSearchParams, setURLSearchParams]);\n\n  const data: [QueryType, typeof setParams] = React.useMemo(() => {\n    return [params, setParams];\n  }, [params, setParams]);\n\n  return data;\n};\n\nexport default useQuery;\n"],"mappings":"qHAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,OAASC,eAAT,KAAgC,kBAAhC,CAEA,GAAMC,SAAQ,CAAG,QAAXA,SAAW,EAAgC,CAC/C,qBAA8CD,eAAe,EAA7D,sDAAOE,eAAP,sBAAwBC,kBAAxB,sBAEA,GAAMC,OAAM,CAAGL,KAAK,CAACM,OAAN,CAAc,UAAM,CACjC,MAAOC,MAAK,CAACC,IAAN,CAAWL,eAAe,CAACM,OAAhB,EAAX,EAAsCC,MAAtC,CAA6C,SAACC,GAAD,MAAuB,kCAAhBC,GAAgB,UAAXC,KAAW,UACzEF,GAAG,CAACC,GAAD,CAAH,CAAWC,KAAX,CACA,MAAOF,IAAP,CACD,CAHM,CAGJ,EAHI,CAAP,CAID,CALc,CAKZ,CAACR,eAAD,CALY,CAAf,CAOA,GAAMW,UAAS,CAAGd,KAAK,CAACe,WAAN,CAAkB,SAACC,IAAD,CAA8B,CAChEC,MAAM,CAACR,OAAP,CAAeO,IAAf,EAAqBE,OAArB,CAA6B,eAAkB,mCAAhBN,GAAgB,UAAXC,KAAW,UAC7C,GAAI,CAACA,KAAL,CAAY,CACV,MAAOV,gBAAe,CAACgB,MAAhB,CAAuBP,GAAvB,CAAP,CACD,CACDT,eAAe,CAACiB,GAAhB,CAAoBR,GAApB,CAAyBC,KAAzB,EACD,CALD,EAMAT,kBAAkB,CAACD,eAAD,CAAlB,CACD,CARiB,CAQf,CAACA,eAAD,CAAkBC,kBAAlB,CARe,CAAlB,CAUA,GAAMY,KAAmC,CAAGhB,KAAK,CAACM,OAAN,CAAc,UAAM,CAC9D,MAAO,CAACD,MAAD,CAASS,SAAT,CAAP,CACD,CAF2C,CAEzC,CAACT,MAAD,CAASS,SAAT,CAFyC,CAA5C,CAIA,MAAOE,KAAP,CACD,CAzBD,CA2BA,cAAed,SAAf"},"metadata":{},"sourceType":"module"}