{"ast":null,"code":"var _jsxFileName = \"/home/fusion/workspace/frontend/src/ui/pages/userProfile/components/UserInfo.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport CommonInputField from '../../../components/CommonInputField';\nimport userApi from '../../../../api/userApi';\nimport { useAppDispatch, useAppSelector } from '../../../../store';\nimport { setUser } from '../../../../store/userReducer';\nimport CommonButton from '../../../components/CommonButton';\nimport defaultAvatar from '../../../images/default-avatar.png';\nimport mailIcon from '../../../images/mail.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserInfo = props => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const user = useAppSelector(state => state.userReducer.user);\n  const formik = useFormik({\n    initialValues: {\n      name: user.name || '',\n      email: user.email\n    },\n    onSubmit: async values => {\n      try {\n        const response = await userApi.updateUser(user.id, values);\n        dispatch(setUser(response.data.user));\n        props.toggleChangeUserInfo();\n        formik.setStatus('Success!');\n        setTimeout(() => {\n          formik.setStatus(false);\n        }, 2000);\n      } catch (error) {\n        console.log('ERROR >>', error);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CommonInputField, {\n      icon: defaultAvatar,\n      hint: \"Your name\",\n      value: user === null || user === void 0 ? void 0 : user.name,\n      name: \"name\",\n      disabled: !props.isChangeUserInfo,\n      fieldInputProps: formik.getFieldProps('name'),\n      error: formik !== null && formik !== void 0 && formik.touched.email ? formik === null || formik === void 0 ? void 0 : formik.errors.name : '',\n      success: formik.status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommonInputField, {\n      icon: mailIcon,\n      hint: \"Your email\",\n      value: user === null || user === void 0 ? void 0 : user.email,\n      name: \"email\",\n      disabled: !props.isChangeUserInfo,\n      fieldInputProps: formik.getFieldProps('email'),\n      error: formik !== null && formik !== void 0 && formik.touched.email ? formik === null || formik === void 0 ? void 0 : formik.errors.email : '',\n      success: formik.status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), props.isChangeUserInfo && /*#__PURE__*/_jsxDEV(CommonButton, {\n      text: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserInfo, \"GEVPTpdI8++9tOOMLxrYNHalj3c=\", false, function () {\n  return [useAppDispatch, useAppSelector, useFormik];\n});\n\n_c = UserInfo;\nexport default UserInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfo\");","map":{"version":3,"names":["React","useFormik","CommonInputField","userApi","useAppDispatch","useAppSelector","setUser","CommonButton","defaultAvatar","mailIcon","UserInfo","props","dispatch","user","state","userReducer","formik","initialValues","name","email","onSubmit","values","response","updateUser","id","data","toggleChangeUserInfo","setStatus","setTimeout","error","console","log","handleSubmit","isChangeUserInfo","getFieldProps","touched","errors","status"],"sources":["/home/fusion/workspace/frontend/src/ui/pages/userProfile/components/UserInfo.tsx"],"sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\n\nimport CommonInputField from '../../../components/CommonInputField';\n\nimport userApi from '../../../../api/userApi';\nimport { useAppDispatch, useAppSelector } from '../../../../store';\nimport { setUser } from '../../../../store/userReducer';\nimport { User } from '../../../../types';\n\nimport CommonButton from '../../../components/CommonButton';\n\nimport defaultAvatar from '../../../images/default-avatar.png';\nimport mailIcon from '../../../images/mail.png';\n\ntype UserInfoProps = {\n  isChangeUserInfo: boolean;\n  disabled?: boolean;\n  toggleChangeUserInfo: () => void;\n}\n\nconst UserInfo: React.FC<UserInfoProps> = (props) => {\n  const dispatch = useAppDispatch();\n  const user = useAppSelector((state) => state.userReducer.user) as User;\n\n  const formik = useFormik({\n    initialValues: {\n      name: user.name || '',\n      email: user.email,\n    },\n    onSubmit: async (values) => {\n      try {\n        const response = await userApi.updateUser(user.id, values);\n        dispatch(setUser(response.data.user));\n        props.toggleChangeUserInfo();\n        formik.setStatus('Success!');\n        setTimeout(() => {\n          formik.setStatus(false);\n        }, 2000);\n      } catch (error) {\n        console.log('ERROR >>', error);\n      }\n    },\n  });\n  return (\n    <form\n      onSubmit={formik.handleSubmit}\n    >\n      <CommonInputField\n        icon={defaultAvatar}\n        hint=\"Your name\"\n        value={user?.name}\n        name=\"name\"\n        disabled={!props.isChangeUserInfo}\n        fieldInputProps={formik.getFieldProps('name')}\n        error={formik?.touched.email ? formik?.errors.name : ''}\n        success={formik.status}\n      />\n      <CommonInputField\n        icon={mailIcon}\n        hint=\"Your email\"\n        value={user?.email}\n        name=\"email\"\n        disabled={!props.isChangeUserInfo}\n        fieldInputProps={formik.getFieldProps('email')}\n        error={formik?.touched.email ? formik?.errors.email : ''}\n        success={formik.status}\n      />\n      {props.isChangeUserInfo &&\n        <CommonButton\n          text=\"Confirm\"\n        />\n      }\n    </form>\n  );\n};\n\nexport default UserInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}