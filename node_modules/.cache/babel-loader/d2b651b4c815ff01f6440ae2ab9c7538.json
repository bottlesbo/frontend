{"ast":null,"code":"var _jsxFileName = \"/home/fusion/workspace/frontend/src/ui/pages/home/components/BooksList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../../../store';\nimport { getAllBooksThunk } from '../../../../store/bookThunk';\nimport { getAllGenres } from '../../../../store/genreThunk';\nimport useQuery from '../../../../utils/useQuery';\nimport BooksRender from '../../../components/Book';\nimport Loader from '../../../components/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BooksList = () => {\n  _s();\n\n  const books = useAppSelector(state => state.bookReducer.books);\n  const dispatch = useAppDispatch();\n  const [isLoading, setIsLoading] = useState(true);\n  const [parsedParams] = useQuery();\n  useEffect(() => {\n    (async () => {\n      await dispatch(getAllGenres());\n      await dispatch(getAllBooksThunk({\n        options: parsedParams\n      }));\n      setIsLoading(false);\n    })();\n  }, [dispatch, parsedParams]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(BooksRender, {\n      wrap: \"wrap\",\n      booksArray: books\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(BooksList, \"62qyunAzq3gia0dY6qMJ55dasec=\", false, function () {\n  return [useAppSelector, useAppDispatch, useQuery];\n});\n\n_c = BooksList;\nexport default BooksList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BooksList\");","map":{"version":3,"names":["React","useEffect","useState","useAppDispatch","useAppSelector","getAllBooksThunk","getAllGenres","useQuery","BooksRender","Loader","BooksList","books","state","bookReducer","dispatch","isLoading","setIsLoading","parsedParams","options"],"sources":["/home/fusion/workspace/frontend/src/ui/pages/home/components/BooksList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { useAppDispatch, useAppSelector } from '../../../../store';\nimport { getAllBooksThunk } from '../../../../store/bookThunk';\nimport { getAllGenres } from '../../../../store/genreThunk';\n\nimport { QuerySearchOptions } from '../../../../types';\nimport useQuery from '../../../../utils/useQuery';\n\nimport BooksRender from '../../../components/Book';\nimport Loader from '../../../components/Loader';\n\nconst BooksList = () => {\n  const books = useAppSelector((state) => state.bookReducer.books);\n  const dispatch = useAppDispatch();\n  const [isLoading, setIsLoading] = useState(true);\n  const [parsedParams] = useQuery<QuerySearchOptions>();\n\n  useEffect(() => {\n    (async () => {\n      await dispatch(getAllGenres());\n      await dispatch(getAllBooksThunk({ options: parsedParams }));\n      setIsLoading(false);\n    })();\n  }, [dispatch, parsedParams]);\n\n  return (\n    <>\n      {\n        isLoading\n          ? <Loader />\n          : <BooksRender\n            wrap=\"wrap\"\n            booksArray={books}\n          />\n      }\n    </>\n\n  );\n};\n\nexport default BooksList;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,mBAA/C;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SAASC,YAAT,QAA6B,8BAA7B;AAGA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAMC,KAAK,GAAGP,cAAc,CAAEQ,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBF,KAA9B,CAA5B;EACA,MAAMG,QAAQ,GAAGX,cAAc,EAA/B;EACA,MAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACe,YAAD,IAAiBV,QAAQ,EAA/B;EAEAN,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,MAAMa,QAAQ,CAACR,YAAY,EAAb,CAAd;MACA,MAAMQ,QAAQ,CAACT,gBAAgB,CAAC;QAAEa,OAAO,EAAED;MAAX,CAAD,CAAjB,CAAd;MACAD,YAAY,CAAC,KAAD,CAAZ;IACD,CAJD;EAKD,CANQ,EAMN,CAACF,QAAD,EAAWG,YAAX,CANM,CAAT;EAQA,oBACE;IAAA,UAEIF,SAAS,gBACL,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADK,gBAEL,QAAC,WAAD;MACA,IAAI,EAAC,MADL;MAEA,UAAU,EAAEJ;IAFZ;MAAA;MAAA;MAAA;IAAA;EAJR,iBADF;AAaD,CA3BD;;GAAMD,S;UACUN,c,EACGD,c,EAEMI,Q;;;KAJnBG,S;AA6BN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}