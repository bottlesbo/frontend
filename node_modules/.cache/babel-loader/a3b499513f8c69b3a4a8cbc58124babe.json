{"ast":null,"code":"import axios from 'axios';\nimport Cookies from 'js-cookie';\nimport config from '../config';\nimport constants from '../constants';\nimport checkRefreshToken from '../utils/checkRefreshToken';\nimport logOut from '../utils/logOut';\nconst instance = axios.create({\n  baseURL: config.apiBaseUrl\n});\ninstance.interceptors.request.use(config => {\n  const token = Cookies.get(constants.token.access);\n\n  if (token) {\n    if (!config.headers) {\n      config.headers = {};\n    }\n\n    config.headers.authorization = `Bearer ${token}`;\n  }\n\n  return config;\n});\nlet isCheckRefreshJWTSend = null;\ninstance.interceptors.response.use(response => {\n  if (response.data === 'OK') {\n    return response;\n  }\n\n  if ('token' in response.data) {\n    var _response$data;\n\n    Cookies.set(constants.token.access, response.data.token);\n    Cookies.set(constants.token.refresh, (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.refreshToken);\n  }\n\n  return response;\n}, async err => {\n  if (err.response.status === 401 && err.response.data.data.message === 'Token expired') {\n    if (!isCheckRefreshJWTSend) {\n      isCheckRefreshJWTSend = checkRefreshToken();\n    }\n\n    const isChecked = await isCheckRefreshJWTSend;\n\n    if (isChecked) {\n      const req = { ...err.config\n      };\n      req.headers.authorization = `Bearer ${Cookies.get(constants.token.access)}`;\n      isCheckRefreshJWTSend = null;\n      return axios.request(req);\n    }\n  } else if (err.response.status === 401 && err.response.data.data.message === 'Refresh token expired') {\n    return logOut();\n  }\n\n  return Promise.reject(err);\n});\nexport default instance;","map":{"version":3,"names":["axios","Cookies","config","constants","checkRefreshToken","logOut","instance","create","baseURL","apiBaseUrl","interceptors","request","use","token","get","access","headers","authorization","isCheckRefreshJWTSend","response","data","set","refresh","refreshToken","err","status","message","isChecked","req","Promise","reject"],"sources":["/home/father/bookstore/frontend/src/api/axios.ts"],"sourcesContent":["import axios from 'axios';\nimport Cookies from 'js-cookie';\n\nimport config from '../config';\nimport constants from '../constants';\n\nimport checkRefreshToken from '../utils/checkRefreshToken';\nimport logOut from '../utils/logOut';\n\nconst instance = axios.create({\n  baseURL: config.apiBaseUrl,\n});\n\ninstance.interceptors.request.use((config) => {\n  const token = Cookies.get(constants.token.access);\n  if (token) {\n    if (!config.headers) {\n      config.headers = {};\n    }\n    config.headers.authorization = `Bearer ${token}`;\n  }\n\n  return config;\n});\n\nlet isCheckRefreshJWTSend: Promise<boolean> | null = null;\n\ninstance.interceptors.response.use((response) => {\n  if (response.data === 'OK') {\n    return response;\n  }\n\n  if ('token' in response.data) {\n    Cookies.set(constants.token.access, response.data.token);\n    Cookies.set(constants.token.refresh, response.data?.refreshToken);\n  }\n\n  return response;\n}, async (err) => {\n  if (\n    err.response.status === 401 &&\n    err.response.data.data.message === 'Token expired'\n  ) {\n    if (!isCheckRefreshJWTSend) {\n      isCheckRefreshJWTSend = checkRefreshToken();\n    }\n    const isChecked = await isCheckRefreshJWTSend;\n    if (isChecked) {\n      const req = { ...err.config };\n      req.headers.authorization = `Bearer ${Cookies.get(constants.token.access)}`;\n\n      isCheckRefreshJWTSend = null;\n\n      return axios.request(req);\n    }\n  } else if (\n    err.response.status === 401 &&\n    err.response.data.data.message === 'Refresh token expired'\n  ) {\n    return logOut();\n  }\n\n  return Promise.reject(err);\n});\n\nexport default instance;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,MAAMC,QAAQ,GAAGN,KAAK,CAACO,MAAN,CAAa;EAC5BC,OAAO,EAAEN,MAAM,CAACO;AADY,CAAb,CAAjB;AAIAH,QAAQ,CAACI,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAmCV,MAAD,IAAY;EAC5C,MAAMW,KAAK,GAAGZ,OAAO,CAACa,GAAR,CAAYX,SAAS,CAACU,KAAV,CAAgBE,MAA5B,CAAd;;EACA,IAAIF,KAAJ,EAAW;IACT,IAAI,CAACX,MAAM,CAACc,OAAZ,EAAqB;MACnBd,MAAM,CAACc,OAAP,GAAiB,EAAjB;IACD;;IACDd,MAAM,CAACc,OAAP,CAAeC,aAAf,GAAgC,UAASJ,KAAM,EAA/C;EACD;;EAED,OAAOX,MAAP;AACD,CAVD;AAYA,IAAIgB,qBAA8C,GAAG,IAArD;AAEAZ,QAAQ,CAACI,YAAT,CAAsBS,QAAtB,CAA+BP,GAA/B,CAAoCO,QAAD,IAAc;EAC/C,IAAIA,QAAQ,CAACC,IAAT,KAAkB,IAAtB,EAA4B;IAC1B,OAAOD,QAAP;EACD;;EAED,IAAI,WAAWA,QAAQ,CAACC,IAAxB,EAA8B;IAAA;;IAC5BnB,OAAO,CAACoB,GAAR,CAAYlB,SAAS,CAACU,KAAV,CAAgBE,MAA5B,EAAoCI,QAAQ,CAACC,IAAT,CAAcP,KAAlD;IACAZ,OAAO,CAACoB,GAAR,CAAYlB,SAAS,CAACU,KAAV,CAAgBS,OAA5B,oBAAqCH,QAAQ,CAACC,IAA9C,mDAAqC,eAAeG,YAApD;EACD;;EAED,OAAOJ,QAAP;AACD,CAXD,EAWG,MAAOK,GAAP,IAAe;EAChB,IACEA,GAAG,CAACL,QAAJ,CAAaM,MAAb,KAAwB,GAAxB,IACAD,GAAG,CAACL,QAAJ,CAAaC,IAAb,CAAkBA,IAAlB,CAAuBM,OAAvB,KAAmC,eAFrC,EAGE;IACA,IAAI,CAACR,qBAAL,EAA4B;MAC1BA,qBAAqB,GAAGd,iBAAiB,EAAzC;IACD;;IACD,MAAMuB,SAAS,GAAG,MAAMT,qBAAxB;;IACA,IAAIS,SAAJ,EAAe;MACb,MAAMC,GAAG,GAAG,EAAE,GAAGJ,GAAG,CAACtB;MAAT,CAAZ;MACA0B,GAAG,CAACZ,OAAJ,CAAYC,aAAZ,GAA6B,UAAShB,OAAO,CAACa,GAAR,CAAYX,SAAS,CAACU,KAAV,CAAgBE,MAA5B,CAAoC,EAA1E;MAEAG,qBAAqB,GAAG,IAAxB;MAEA,OAAOlB,KAAK,CAACW,OAAN,CAAciB,GAAd,CAAP;IACD;EACF,CAhBD,MAgBO,IACLJ,GAAG,CAACL,QAAJ,CAAaM,MAAb,KAAwB,GAAxB,IACAD,GAAG,CAACL,QAAJ,CAAaC,IAAb,CAAkBA,IAAlB,CAAuBM,OAAvB,KAAmC,uBAF9B,EAGL;IACA,OAAOrB,MAAM,EAAb;EACD;;EAED,OAAOwB,OAAO,CAACC,MAAR,CAAeN,GAAf,CAAP;AACD,CApCD;AAsCA,eAAelB,QAAf"},"metadata":{},"sourceType":"module"}