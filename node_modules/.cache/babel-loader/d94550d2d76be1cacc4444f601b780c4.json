{"ast":null,"code":"var _jsxFileName = \"/home/father/bookstore/frontend/src/ui/pages/home/components/DropdownMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport useOutclick from '../../../../utils/useOutclick';\nimport forwardIcon from '../../../images/forward-icon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropdownMenu = props => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const ref = useRef(null);\n\n  const toggleIsOpen = () => {\n    setIsOpen(!isOpen);\n  };\n\n  useOutclick(ref, isOpen, toggleIsOpen);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: \"filter__wrapper\",\n    onClick: toggleIsOpen,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"filter__name\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: forwardIcon,\n      className: \"filter__icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), isOpen && props.children]\n  }, props.title, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DropdownMenu, \"HiFF7THTVRznkYwP1U02ZIj3J50=\", false, function () {\n  return [useOutclick];\n});\n\n_c = DropdownMenu;\nexport default DropdownMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownMenu\");","map":{"version":3,"names":["React","useRef","useState","useOutclick","forwardIcon","DropdownMenu","props","isOpen","setIsOpen","ref","toggleIsOpen","title","children"],"sources":["/home/father/bookstore/frontend/src/ui/pages/home/components/DropdownMenu.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\n\nimport useOutclick from '../../../../utils/useOutclick';\n\nimport forwardIcon from '../../../images/forward-icon.png';\n\ntype DropdownProps = React.PropsWithChildren<{\n  title: string;\n}>\n\nconst DropdownMenu: React.FC<DropdownProps> = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const ref = useRef(null);\n\n  const toggleIsOpen = () => {\n    setIsOpen(!isOpen);\n  };\n\n  useOutclick(ref, isOpen, toggleIsOpen);\n\n  return (\n    <div\n      ref={ref}\n      key={props.title}\n      className=\"filter__wrapper\"\n      onClick={toggleIsOpen}\n    >\n      <p className=\"filter__name\">\n        {props.title}\n      </p>\n      <img\n        src={forwardIcon}\n        className=\"filter__icon\"\n      />\n      {isOpen && props.children}\n    </div>\n  );\n};\n\nexport default DropdownMenu;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,OAAOC,WAAP,MAAwB,kCAAxB;;;AAMA,MAAMC,YAAqC,GAAIC,KAAD,IAAW;EAAA;;EACvD,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;EACA,MAAMO,GAAG,GAAGR,MAAM,CAAC,IAAD,CAAlB;;EAEA,MAAMS,YAAY,GAAG,MAAM;IACzBF,SAAS,CAAC,CAACD,MAAF,CAAT;EACD,CAFD;;EAIAJ,WAAW,CAACM,GAAD,EAAMF,MAAN,EAAcG,YAAd,CAAX;EAEA,oBACE;IACE,GAAG,EAAED,GADP;IAGE,SAAS,EAAC,iBAHZ;IAIE,OAAO,EAAEC,YAJX;IAAA,wBAME;MAAG,SAAS,EAAC,cAAb;MAAA,UACGJ,KAAK,CAACK;IADT;MAAA;MAAA;MAAA;IAAA,QANF,eASE;MACE,GAAG,EAAEP,WADP;MAEE,SAAS,EAAC;IAFZ;MAAA;MAAA;MAAA;IAAA,QATF,EAaGG,MAAM,IAAID,KAAK,CAACM,QAbnB;EAAA,GAEON,KAAK,CAACK,KAFb;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CA3BD;;GAAMN,Y;UAQJF,W;;;KARIE,Y;AA6BN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}