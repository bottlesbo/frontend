{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './rootReducer';\nexport const store = configureStore({\n  reducer: rootReducer\n});\nexport const useAppDispatch = () => {\n  _s();\n\n  return useDispatch();\n};\n\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\n\nexport const useAppSelector = useSelector;","map":{"version":3,"names":["useDispatch","useSelector","configureStore","rootReducer","store","reducer","useAppDispatch","useAppSelector"],"sources":["/home/fusion/workspace/frontend/src/store/index.ts"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { configureStore } from '@reduxjs/toolkit';\n\nimport rootReducer from './rootReducer';\n\nexport const store = configureStore({\n  reducer: rootReducer,\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n"],"mappings":";;AAAA,SAA+BA,WAA/B,EAA4CC,WAA5C,QAA+D,aAA/D;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,MAAMC,KAAK,GAAGF,cAAc,CAAC;EAClCG,OAAO,EAAEF;AADyB,CAAD,CAA5B;AAOP,OAAO,MAAMG,cAAc,GAAG;EAAA;;EAAA,OAAMN,WAAW,EAAjB;AAAA,CAAvB;;GAAMM,c;UAAuBN,W;;;AACpC,OAAO,MAAMO,cAA+C,GAAGN,WAAxD"},"metadata":{},"sourceType":"module"}