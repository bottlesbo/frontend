{"ast":null,"code":"export let EnvTypes;\n\n(function (EnvTypes) {\n  EnvTypes[\"development\"] = \"development\";\n  EnvTypes[\"production\"] = \"production\";\n  EnvTypes[\"stage\"] = \"staging\";\n})(EnvTypes || (EnvTypes = {}));\n\nconst envType = process.env.REACT_APP_NODE_ENV || process.env.NODE_ENV || EnvTypes.development;\nconst config = {\n  apiBaseUrl: 'http://54.193.211.198/api'\n}; // eslint-disable-next-line default-case\n\nswitch (envType) {\n  case EnvTypes.production:\n    config.apiBaseUrl = 'http://54.193.211.198/api';\n    break;\n\n  case EnvTypes.stage:\n    config.apiBaseUrl = 'http://54.193.211.198/api';\n    break;\n}\n\nexport const isDev = envType === EnvTypes.development;\nexport default config;","map":{"version":3,"names":["EnvTypes","envType","process","env","REACT_APP_NODE_ENV","NODE_ENV","development","config","apiBaseUrl","production","stage","isDev"],"sources":["/home/fusion/workspace/frontend/src/config.ts"],"sourcesContent":["export enum EnvTypes {\n  development = 'development',\n  production = 'production',\n  stage = 'staging',\n}\n\nconst envType: EnvTypes =\n  process.env.REACT_APP_NODE_ENV as EnvTypes ||\n  process.env.NODE_ENV ||\n  EnvTypes.development;\n\nconst config = {\n  apiBaseUrl: 'http://54.193.211.198/api'\n};\n\n// eslint-disable-next-line default-case\nswitch (envType) {\n  case EnvTypes.production:\n    config.apiBaseUrl = 'http://54.193.211.198/api';\n    break;\n\n  case EnvTypes.stage:\n    config.apiBaseUrl = 'http://54.193.211.198/api';\n    break;\n}\n\nexport const isDev = envType === EnvTypes.development;\n\nexport default config;\n"],"mappings":"AAAA,WAAYA,QAAZ;;WAAYA,Q;EAAAA,Q;EAAAA,Q;EAAAA,Q;GAAAA,Q,KAAAA,Q;;AAMZ,MAAMC,OAAiB,GACrBC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,IACAF,OAAO,CAACC,GAAR,CAAYE,QADZ,IAEAL,QAAQ,CAACM,WAHX;AAKA,MAAMC,MAAM,GAAG;EACbC,UAAU,EAAE;AADC,CAAf,C,CAIA;;AACA,QAAQP,OAAR;EACE,KAAKD,QAAQ,CAACS,UAAd;IACEF,MAAM,CAACC,UAAP,GAAoB,2BAApB;IACA;;EAEF,KAAKR,QAAQ,CAACU,KAAd;IACEH,MAAM,CAACC,UAAP,GAAoB,2BAApB;IACA;AAPJ;;AAUA,OAAO,MAAMG,KAAK,GAAGV,OAAO,KAAKD,QAAQ,CAACM,WAAnC;AAEP,eAAeC,MAAf"},"metadata":{},"sourceType":"module"}