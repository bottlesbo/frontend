{"version":3,"file":"static/js/479.9c47aa04.chunk.js","mappings":"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","sources":["ui/components/CommonInputField/CommonInputField.styles.ts","ui/components/CommonInputField/CommonInputField.tsx","ui/pages/userProfile/components/UserPassword.tsx","ui/pages/userProfile/components/UserInfo.tsx","ui/pages/userProfile/UserProfile.styles.ts","ui/pages/userProfile/UserProfile.tsx"],"sourcesContent":["import styled from 'styled-components';\n\ntype StylesProps = {\n  isError?: boolean;\n  isSuccess?: boolean;\n}\n\nconst CommonInputWrapper = styled.div<StylesProps>`\n  display: flex;\n  background: #F0F4EF;\n  border-radius: 16px;\n  width: 522px;\n  margin: 20px 0;\n  cursor: text;\n  border:  2px solid ${(props) => {\n    if (props.isError) {\n      return '#ED2E7E';\n    }\n    if (props.isSuccess) {\n      return '#00966D';\n    }\n\n    return 'transparent';\n  }};\n  \n  .input__icon {\n    width: 24px;\n    height: 100%;\n    padding: 20px 16px 20px 24px;\n  }\n\n  .input__info-block {\n    position: relative;\n    padding: 6px 0;\n  }\n\n  .error {\n    position: absolute;\n    font-size: 14px;\n    line-height: 24px;\n    color: #C30052;\n    top: 66px;\n    left: -66px;\n  }\n\n  .input__info-name {\n    margin: 0;\n    font-size: 14px;\n    line-height: 24px;\n    letter-spacing: 0.75px;\n  }\n\n  .input__info-value {\n    font-family: 'Poppins',sans-serif;\n    margin: 0;\n    font-weight: 400;\n    font-size: 16px;\n    letter-spacing: 0.75px;\n    line-height: 28px;\n    background: inherit;\n  }\n\n  .input__input {\n    border: none;\n    outline: none;\n    background: inherit;\n    -webkit-box-shadow: inset 0 0 0 50px #f0f4ef;\n  }\n\n  .no-hint {\n    display: flex;\n   justify-content: center;\n   align-items:center;\n  }\n\n  @media (max-width: 1279px) {\n    max-width: 529px;\n    width: 100%;\n  }\n\n  @media (max-width: 833px) {\n    align-items: center;\n\n    .input__icon {\n      padding: 12px 16px 11px 24px;\n    }\n\n    .input__info-name {\n      font-size: 12px;\n      line-height: 24px;\n    }\n\n    .input__info-value {\n      font-size: 14px;\n    }\n\n    .input__info-block {\n      padding: 2px 0;\n    }\n\n    .no-hint {\n      padding: 14px 0;\n    }\n  }\n`;\n\nexport default CommonInputWrapper;\n","import React from 'react';\nimport { FieldInputProps } from 'formik';\n\nimport CommonInputWrapper from './CommonInputField.styles';\n\ntype CommonInputProps = {\n  icon: string;\n  placeholder?: string;\n  hint?: string;\n  type?: string;\n  width?: string;\n  disabled?: boolean;\n  value?: string;\n  name: string;\n  submit?: React.FormEvent<HTMLFormElement>\n  error?: string;\n  success?: string;\n  fieldInputProps?: FieldInputProps<any>; // eslint-disable-line @typescript-eslint/no-explicit-any\n  onClickOnIcon?: () => void;\n}\n\nconst CommonInputField: React.FC<CommonInputProps> = (props) => {\n  return (\n    <CommonInputWrapper\n      isError={Boolean(props.error)}\n      isSuccess={Boolean(props.success)}\n    >\n      <img\n        className=\"input__icon\"\n        src={props.icon}\n        onClick={props.onClickOnIcon}\n      />\n      <div className={props.hint ? 'input__info-block' : 'input__info-block no-hint'}>\n        {props.error\n          ? (<div\n            className=\"error\"\n          >{props.error}</div>)\n          : null\n        }\n        {props.hint &&\n          <p className=\"input__info-name\">\n            {props.hint}\n          </p>\n        }\n        {props.success\n          ? <div className=\"success\" />\n          : null\n        }\n        <input\n          name={props.name}\n          className=\"input__info-value input__input\"\n          type={props.type}\n          placeholder={props.placeholder}\n          disabled={props.disabled}\n          value={props.value}\n          {...props.fieldInputProps}\n        />\n      </div>\n    </CommonInputWrapper>\n  );\n};\n\nexport default CommonInputField;\n","import React, { useState } from 'react';\nimport { AxiosError } from 'axios';\nimport { toast } from 'react-toastify';\nimport { useFormik } from 'formik';\n\nimport YupString from 'yup/lib/string';\nimport YupObject from 'yup/lib/object';\nimport YupRef from 'yup/lib/Reference';\n\nimport userApi from '../../../../api/userApi';\nimport { useAppSelector } from '../../../../store';\nimport { User } from '../../../../types';\n\nimport CommonInputField from '../../../components/CommonInputField';\nimport CommonButton from '../../../components/CommonButton';\n\nimport hideIcon from '../../../images/hide.png';\nimport showIcon from '../../../images/view.png';\n\ntype UserProfileProps = {\n  isChangePassword: boolean;\n  toggleChangePassword: () => void;\n}\n\nconst changePasswordValidationSchema = new YupObject().shape({\n  oldPassword: new YupString().required('Required'),\n  password: new YupString().required('Required'),\n  passwordRepeat: new YupString().when('password', {\n    is: (value: string) => (Boolean(value && value.length > 0)),\n    then: new YupString().oneOf(\n      [new YupRef('password')],\n      'Both passwords need to be the same',\n    ),\n  }),\n});\n\nconst UserPassword: React.FC<UserProfileProps> = (props) => {\n  const user = useAppSelector((state) => state.userReducer.user) as User;\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n\n  const formik = useFormik({\n    initialValues: {\n      oldPassword: '',\n      password: '',\n      passwordRepeat: '',\n    },\n    validationSchema: changePasswordValidationSchema,\n    onSubmit: async (values) => {\n      try {\n        const { password, oldPassword } = values;\n        await userApi.updateUser(user.id, { oldPassword, password });\n        props.toggleChangePassword();\n        formik.setStatus('Success!');\n        setTimeout(() => {\n          formik.setStatus(false);\n        }, 2000);\n      } catch (error) {\n        if (error instanceof AxiosError) {\n          const status = error.response?.status;\n          if (status === 403) {\n            formik.setErrors({\n              oldPassword: error.response?.data.data.message,\n            });\n          }\n        } else {\n          toast.error('Sorry, something went wrong...', { autoClose: 3000 });\n        }\n      }\n    },\n  });\n\n  const icon = isPasswordVisible ? showIcon : hideIcon;\n  const inputType = isPasswordVisible ? 'text' : 'password';\n\n  const togglePasswordVisibility = () => {\n    setIsPasswordVisible(!isPasswordVisible);\n  };\n\n  if (props.isChangePassword) {\n    return (\n      <CommonInputField\n        icon={hideIcon}\n        name=\"password\"\n        hint=\"Your password\"\n        placeholder=\"********\"\n        disabled={true}\n        success={formik.status}\n      />\n    );\n  }\n  return (\n    <form\n      onKeyDown={(e) => {\n        if (e.key === 'Enter') {\n          formik.handleSubmit();\n        }\n      }}\n      onSubmit={formik.handleSubmit}\n    >\n      <CommonInputField\n        icon={icon}\n        name=\"oldPassword\"\n        hint=\"Old password\"\n        placeholder=\"*************\"\n        type={inputType}\n        fieldInputProps={formik.getFieldProps('oldPassword')}\n        error={formik?.touched.oldPassword ? formik?.errors.oldPassword : ''}\n        onClickOnIcon={togglePasswordVisibility}\n      />\n      <CommonInputField\n        icon={icon}\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"New password\"\n        fieldInputProps={formik.getFieldProps('password')}\n        error={formik?.touched.password ? formik?.errors.password : ''}\n        onClickOnIcon={togglePasswordVisibility}\n      />\n      <p>Enter your password</p>\n      <CommonInputField\n        icon={icon}\n        placeholder=\"Password replay\"\n        type=\"password\"\n        name=\"passwordRepeat\"\n        fieldInputProps={formik.getFieldProps('passwordRepeat')}\n        error={formik?.touched.passwordRepeat ? formik?.errors.passwordRepeat : ''}\n        onClickOnIcon={togglePasswordVisibility}\n      />\n      <p>Repeat your passport withour errors</p>\n      <CommonButton\n        text=\"Confirm\"\n      />\n    </form>\n  );\n};\n\nexport default UserPassword;\n","import React from 'react';\nimport { useFormik } from 'formik';\n\nimport CommonInputField from '../../../components/CommonInputField';\n\nimport userApi from '../../../../api/userApi';\nimport { useAppDispatch, useAppSelector } from '../../../../store';\nimport { setUser } from '../../../../store/userReducer';\nimport { User } from '../../../../types';\n\nimport CommonButton from '../../../components/CommonButton';\n\nimport defaultAvatar from '../../../images/default-avatar.png';\nimport mailIcon from '../../../images/mail.png';\n\ntype UserInfoProps = {\n  isChangeUserInfo: boolean;\n  disabled?: boolean;\n  toggleChangeUserInfo: () => void;\n}\n\nconst UserInfo: React.FC<UserInfoProps> = (props) => {\n  const dispatch = useAppDispatch();\n  const user = useAppSelector((state) => state.userReducer.user) as User;\n\n  const formik = useFormik({\n    initialValues: {\n      name: user.name || '',\n      email: user.email,\n    },\n    onSubmit: async (values) => {\n      try {\n        const response = await userApi.updateUser(user.id, values);\n        dispatch(setUser(response.data.user));\n        props.toggleChangeUserInfo();\n        formik.setStatus('Success!');\n        setTimeout(() => {\n          formik.setStatus(false);\n        }, 2000);\n      } catch (error) {\n        console.log('ERROR >>', error);\n      }\n    },\n  });\n  return (\n    <form\n      onSubmit={formik.handleSubmit}\n    >\n      <CommonInputField\n        icon={defaultAvatar}\n        hint=\"Your name\"\n        value={user?.name}\n        name=\"name\"\n        disabled={!props.isChangeUserInfo}\n        fieldInputProps={formik.getFieldProps('name')}\n        error={formik?.touched.email ? formik?.errors.name : ''}\n        success={formik.status}\n      />\n      <CommonInputField\n        icon={mailIcon}\n        hint=\"Your email\"\n        value={user?.email}\n        name=\"email\"\n        disabled={!props.isChangeUserInfo}\n        fieldInputProps={formik.getFieldProps('email')}\n        error={formik?.touched.email ? formik?.errors.email : ''}\n        success={formik.status}\n      />\n      {props.isChangeUserInfo &&\n        <CommonButton\n          text=\"Confirm\"\n        />\n      }\n    </form>\n  );\n};\n\nexport default UserInfo;\n","import styled from 'styled-components';\n\nconst UserProfileWrapper = styled.div`\n  display: flex;\n  margin-top: 60px;\n\n  .avatar {\n    width: 305px;\n    height: 305px;\n    background: #F0F4EF;\n    border-radius: 16px;\n    position: relative;\n  }\n\n  .avatar__img {\n    width: inherit;\n    height: inherit;\n    object-fit: cover;\n    border-radius: inherit;\n  }\n\n  .avatar__button {\n    position: absolute;\n    right: 20px;\n    bottom: 20px;\n    cursor: pointer;\n  }\n\n  .user-info {\n    padding-left: 128px;\n  }\n\n  .title {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .title__name {\n    font-size: 20px;\n    line-height: 30px;\n    margin: 0;\n  }\n\n  .title__change {\n    cursor: pointer;\n    font-size: 14px;\n    line-height: 21px;\n    text-align: right;\n    text-decoration-line: underline;\n    color: #8D9F4F;\n    margin: 0;\n  }\n\n  .title__description {\n    margin-top: 40px\n  }\n\n  @media (max-width: 1279px) {\n    .avatar {\n      width: 255px;\n      height: 255px;\n    }\n\n    .avatar__button {\n      width: 40px;\n      height: 40px;\n    }\n\n    .user-info {\n      padding-left: 20px;\n      width: 100%;\n    }\n  }\n\n  @media (max-width: 833px) {\n    flex-direction: column;\n\n    .avatar {\n      width: 290px;\n      height: 290px;\n    }\n\n    .title {\n      display: flex;\n      flex-wrap: wrap;\n      margin-top: 30px;\n    }\n\n    .title__name {\n      font-size: 16px;\n      line-height: 24px;\n    }\n\n    .title__change {\n      font-size: 12px;\n      line-height: 18px;\n      text-align: left;\n      text-decoration-line: underline;\n      color: #8D9F4F;\n      margin: 0;\n    }\n  }\n`;\n\nexport default UserProfileWrapper;\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport userApi from '../../../api/userApi';\nimport { useAppDispatch, useAppSelector } from '../../../store';\nimport { setUser } from '../../../store/userReducer';\nimport { User } from '../../../types';\n\nimport UserPassword from './components/UserPassword';\nimport UserInfo from './components/UserInfo';\nimport CommonWrapper from '../../components/CommonWrapper.styles';\n\nimport UserProfileWrapper from './UserProfile.styles';\n\nimport defaultAvatar from '../../images/default-avatar.png';\nimport changeAvatarButton from '../../images/change-avatar-button.png';\n\nconst UserProfile = () => {\n  const dispatch = useAppDispatch();\n  const [isChangeUserInfo, setIsChangeUserInfo] = useState(false);\n  const [isChangePassword, setIsChangePassword] = useState(false);\n  const user = useAppSelector((state) => state.userReducer.user) as User;\n\n  const toggleChangePassword = () => {\n    setIsChangePassword(!isChangePassword);\n  };\n\n  const toggleChangeUserInfo = () => {\n    setIsChangeUserInfo(!isChangeUserInfo);\n  };\n\n  const handleAvatar = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files) {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      reader.onloadend = async () => {\n        try {\n          const base64String = reader.result;\n          const encoded = JSON.stringify(base64String);\n          const response = await userApi.uploadAvatar({ img: encoded });\n          dispatch(setUser(response.data.user));\n        } catch (error) {\n          toast.error('Sorry, we were unable to upload the avatar now...', { autoClose: 3000 });\n        }\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  return (\n    <CommonWrapper>\n      <UserProfileWrapper>\n        <div className=\"avatar\">\n          <img\n            className=\"avatar__img\"\n            src={user.avatar || defaultAvatar}\n          />\n          <label htmlFor=\"ava\">\n            <img\n              src={changeAvatarButton}\n              className=\"avatar__button\"\n            />\n            <input\n              hidden\n              type=\"file\"\n              name=\"ava\"\n              id=\"ava\"\n              onChange={handleAvatar}\n            />\n          </label>\n        </div>\n        <div className=\"user-info\">\n          <div className=\"title\">\n            <p className=\"title__name\">\n              Personal information\n            </p>\n            <p\n              onClick={() => setIsChangeUserInfo(!isChangeUserInfo)}\n              className=\"title__change\"\n            >\n              Change information\n            </p>\n          </div>\n          <UserInfo\n            isChangeUserInfo={isChangeUserInfo}\n            toggleChangeUserInfo={toggleChangeUserInfo}\n          />\n          <div className=\"title title__description\">\n            <p className=\"title__name\">\n              Password\n            </p>\n            <p\n              className=\"title__change\"\n              onClick={() => toggleChangePassword()}\n            >\n              Change password\n            </p>\n          </div>\n          <UserPassword\n            isChangePassword={!isChangePassword}\n            toggleChangePassword={toggleChangePassword}\n          />\n        </div>\n      </UserProfileWrapper>\n    </CommonWrapper >\n  );\n};\n\nexport default UserProfile;\n"],"names":["styled","props","isError","isSuccess","Boolean","error","success","className","src","icon","onClick","onClickOnIcon","hint","name","type","placeholder","disabled","value","fieldInputProps","changePasswordValidationSchema","YupObject","shape","oldPassword","YupString","required","password","passwordRepeat","when","is","length","then","oneOf","YupRef","user","useAppSelector","state","userReducer","useState","isPasswordVisible","setIsPasswordVisible","formik","useFormik","initialValues","validationSchema","onSubmit","values","userApi","id","toggleChangePassword","setStatus","setTimeout","AxiosError","response","status","setErrors","data","message","toast","autoClose","hideIcon","inputType","togglePasswordVisibility","isChangePassword","CommonInputField","onKeyDown","e","key","handleSubmit","getFieldProps","touched","errors","CommonButton","text","dispatch","useAppDispatch","email","setUser","toggleChangeUserInfo","console","log","defaultAvatar","isChangeUserInfo","mailIcon","setIsChangeUserInfo","setIsChangePassword","avatar","htmlFor","hidden","onChange","event","target","files","file","reader","FileReader","onloadend","base64String","result","encoded","JSON","stringify","img","readAsDataURL"],"sourceRoot":""}