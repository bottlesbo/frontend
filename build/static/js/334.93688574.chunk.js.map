{"version":3,"file":"static/js/334.93688574.chunk.js","mappings":"kMA0GA,E,QAnG2BA,GAAAA,IAAH,++CAOD,SAACC,GACpB,OAAIA,EAAMC,QACD,UAELD,EAAME,UACD,UAGF,iB,SCwCX,EAzCqD,SAACF,GACpD,OACE,UAAC,EAAD,CACEC,QAASE,QAAQH,EAAMI,OACvBF,UAAWC,QAAQH,EAAMK,SAF3B,WAIE,gBACEC,UAAU,cACVC,IAAKP,EAAMQ,KACXC,QAAST,EAAMU,iBAEjB,iBAAKJ,UAAWN,EAAMW,KAAO,oBAAsB,4BAAnD,UACGX,EAAMI,OACF,gBACDE,UAAU,QADT,SAEDN,EAAMI,QACN,KAEHJ,EAAMW,OACL,cAAGL,UAAU,mBAAb,SACGN,EAAMW,OAGVX,EAAMK,SACH,gBAAKC,UAAU,YACf,MAEJ,0BACEM,KAAMZ,EAAMY,KACZN,UAAU,iCACVO,KAAMb,EAAMa,KACZC,YAAad,EAAMc,YACnBC,SAAUf,EAAMe,SAChBC,MAAOhB,EAAMgB,OACThB,EAAMiB,0B,oCCrDdC,E,QAAUnB,GAAAA,IAAH,8nDA0Gb,O,uPCrFMoB,GAAyB,IAAIC,EAAAA,IAAYC,MAAM,CACnDC,OAAO,IAAIC,EAAAA,IAAYD,MAAM,yBAAyBE,SAAS,YAC/DC,UAAU,IAAIF,EAAAA,IAAYC,SAAS,YACnCE,gBAAgB,IAAIH,EAAAA,IAAYI,KAAK,WAAY,CAC/CC,GAAI,SAACZ,GAAD,OAAoBb,QAAQa,GAASA,EAAMa,OAAS,IACxDC,MAAM,IAAIP,EAAAA,IAAYQ,MACpB,CAAC,IAAIC,EAAAA,QAAO,aACZ,0CAmGN,UA9FmB,WACjB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbjB,MAAO,GACPG,SAAU,GACVC,eAAgB,IAElBc,iBAAkBrB,EAClBsB,SAAS,WAAD,wBAAE,WAAOC,GAAP,oGAEiBC,EAAAA,EAAAA,OAAe,CACpCrB,MAAOoB,EAAOpB,MACdG,SAAUiB,EAAOjB,WAJb,cAEAmB,EAFA,OAMNX,GAASY,EAAAA,EAAAA,IAAQD,EAASE,KAAKC,OANzB,kBAQCZ,EAAS,GAAD,OAAIa,EAAAA,GAAAA,QARb,gCAUF,gBAAiBC,EAAAA,YAEJ,OAFgB,UAChB,KAAML,gBADU,aAChB,EAAgBM,SAE7Bb,EAAOc,UAAU,CACf7B,MAAK,UAAE,KAAMsB,gBAAR,aAAE,EAAgBE,KAAKA,KAAKM,UAdjC,yDAAF,mDAAC,KAsBX,OACE,SAAC,IAAD,WACE,UAAC,IAAD,YACE,kBACE9C,UAAU,eACVmC,SAAUJ,EAAOgB,aAFnB,WAIE,eAAI/C,UAAU,QAAd,sBAIA,iBAAKA,UAAU,gBAAf,WACE,SAAC,IAAD,CACEE,KAAM8C,EACN1C,KAAK,QACLE,YAAY,QACZG,gBAAiBoB,EAAOkB,cAAc,SACtCnD,MAAa,OAANiC,QAAM,IAANA,GAAAA,EAAQmB,QAAQlC,MAAhB,OAAwBe,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAQoB,OAAOnC,MAAQ,MAExD,cAAGhB,UAAU,aAAb,+BAIA,SAAC,IAAD,CACEE,KAAMkD,EACN7C,KAAK,WACLD,KAAK,WACLE,YAAY,WACZG,gBAAiBoB,EAAOkB,cAAc,YACtCnD,MAAa,OAANiC,QAAM,IAANA,GAAAA,EAAQmB,QAAQ/B,SAAhB,OAA2BY,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAQoB,OAAOhC,SAAW,MAE9D,cAAGnB,UAAU,aAAb,kCAIA,SAAC,IAAD,CACEE,KAAMkD,EACN7C,KAAK,WACLD,KAAK,iBACLE,YAAY,kBACZG,gBAAiBoB,EAAOkB,cAAc,kBACtCnD,MAAa,OAANiC,QAAM,IAANA,GAAAA,EAAQmB,QAAQ9B,eAAhB,OAAiCW,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAQoB,OAAO/B,eAAiB,MAE1E,cAAGpB,UAAU,aAAb,qDAIF,SAAC,IAAD,CACEqD,KAAK,YACLC,KAAK,gBAGT,gBACEtD,UAAU,QACVC,IAAKsD,W","sources":["ui/components/CommonInputField/CommonInputField.styles.ts","ui/components/CommonInputField/CommonInputField.tsx","ui/pages/auth/Auth.styles.ts","ui/pages/auth/SignUp.tsx"],"sourcesContent":["import styled from 'styled-components';\n\ntype StylesProps = {\n  isError?: boolean;\n  isSuccess?: boolean;\n}\n\nconst CommonInputWrapper = styled.div<StylesProps>`\n  display: flex;\n  background: #F0F4EF;\n  border-radius: 16px;\n  width: 522px;\n  margin: 20px 0;\n  cursor: text;\n  border:  2px solid ${(props) => {\n    if (props.isError) {\n      return '#ED2E7E';\n    }\n    if (props.isSuccess) {\n      return '#00966D';\n    }\n\n    return 'transparent';\n  }};\n  \n  .input__icon {\n    width: 24px;\n    height: 100%;\n    padding: 20px 16px 20px 24px;\n  }\n\n  .input__info-block {\n    position: relative;\n    padding: 6px 0;\n  }\n\n  .error {\n    position: absolute;\n    font-size: 14px;\n    line-height: 24px;\n    color: #C30052;\n    top: 66px;\n    left: -66px;\n  }\n\n  .input__info-name {\n    margin: 0;\n    font-size: 14px;\n    line-height: 24px;\n    letter-spacing: 0.75px;\n  }\n\n  .input__info-value {\n    font-family: 'Poppins',sans-serif;\n    margin: 0;\n    font-weight: 400;\n    font-size: 16px;\n    letter-spacing: 0.75px;\n    line-height: 28px;\n    background: inherit;\n  }\n\n  .input__input {\n    border: none;\n    outline: none;\n    background: inherit;\n    -webkit-box-shadow: inset 0 0 0 50px #f0f4ef;\n  }\n\n  .no-hint {\n    display: flex;\n   justify-content: center;\n   align-items:center;\n  }\n\n  @media (max-width: 1279px) {\n    max-width: 529px;\n    width: 100%;\n  }\n\n  @media (max-width: 833px) {\n    align-items: center;\n\n    .input__icon {\n      padding: 12px 16px 11px 24px;\n    }\n\n    .input__info-name {\n      font-size: 12px;\n      line-height: 24px;\n    }\n\n    .input__info-value {\n      font-size: 14px;\n    }\n\n    .input__info-block {\n      padding: 2px 0;\n    }\n\n    .no-hint {\n      padding: 14px 0;\n    }\n  }\n`;\n\nexport default CommonInputWrapper;\n","import React from 'react';\nimport { FieldInputProps } from 'formik';\n\nimport CommonInputWrapper from './CommonInputField.styles';\n\ntype CommonInputProps = {\n  icon: string;\n  placeholder?: string;\n  hint?: string;\n  type?: string;\n  width?: string;\n  disabled?: boolean;\n  value?: string;\n  name: string;\n  submit?: React.FormEvent<HTMLFormElement>\n  error?: string;\n  success?: string;\n  fieldInputProps?: FieldInputProps<any>; // eslint-disable-line @typescript-eslint/no-explicit-any\n  onClickOnIcon?: () => void;\n}\n\nconst CommonInputField: React.FC<CommonInputProps> = (props) => {\n  return (\n    <CommonInputWrapper\n      isError={Boolean(props.error)}\n      isSuccess={Boolean(props.success)}\n    >\n      <img\n        className=\"input__icon\"\n        src={props.icon}\n        onClick={props.onClickOnIcon}\n      />\n      <div className={props.hint ? 'input__info-block' : 'input__info-block no-hint'}>\n        {props.error\n          ? (<div\n            className=\"error\"\n          >{props.error}</div>)\n          : null\n        }\n        {props.hint &&\n          <p className=\"input__info-name\">\n            {props.hint}\n          </p>\n        }\n        {props.success\n          ? <div className=\"success\" />\n          : null\n        }\n        <input\n          name={props.name}\n          className=\"input__info-value input__input\"\n          type={props.type}\n          placeholder={props.placeholder}\n          disabled={props.disabled}\n          value={props.value}\n          {...props.fieldInputProps}\n        />\n      </div>\n    </CommonInputWrapper>\n  );\n};\n\nexport default CommonInputField;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 80px;\n  font-family: 'Poppins';\n\n  .title {\n    font-weight: 700;\n    font-size: 40px;\n    line-height: 60px;\n    margin: 0;\n  }\n\n  .form-wrapper {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .form {\n    display: flex;\n    background-color: #F0F4EF;\n    border-radius: 16px;\n    align-items: center;\n    width: 413px;\n    margin-top: 30px\n  }\n\n  .input-wrapper {\n    margin: 30px 0 60px 0;\n  }\n\n  .form__icon {\n    padding: 20px 24px;\n  }\n  \n  .form__input {\n    outline: none;\n    border: none;\n    background-color: inherit;\n  }\n\n  .form__text {\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 24px;\n    letter-spacing: 0.75px;\n    margin: 9px 0;\n  }\n\n  .button {\n    border: none;\n    padding: 0;\n    text-align: center;\n    display: inline-flex;\n    background-color: inherit;\n    font-family: 'Poppins';\n  }\n  \n  .sign-up-button {\n    padding: 10px 42px;\n  }\n\n  @media (max-width: 1279px) {\n    margin: 15px;\n\n    .title {\n      font-size: 32px;\n      line-height: 48px;\n    }\n\n    .image {\n      width: 390px;\n      height: 333px;\n    }\n  }\n\n  @media (max-width: 833px) {\n    flex-direction: column;\n    margin: 0;\n\n    .form-wrapper {\n      max-width: 290px;\n      width: 100%;\n    }\n\n    .title {\n      font-size: 18px;\n      line-height: 27px;\n    }\n\n    .input-wrapper {\n      margin: 10px 0 20px 0;\n    }\n\n    .image {\n      width: 290px;\n      height: 247px;\n    }\n\n    .question {\n      font-size: 14px;\n      line-height: 24px;\n    }\n  }\n`;\n\nexport default Wrapper;\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport { AxiosError } from 'axios';\n\nimport YupString from 'yup/lib/string';\nimport YupObject from 'yup/lib/object';\nimport YupRef from 'yup/lib/Reference';\n\nimport authAPI from '../../../api/authApi';\nimport { routePath } from '../../../constants';\nimport { useAppDispatch } from '../../../store';\nimport { setUser } from '../../../store/userReducer';\n\nimport CommonButton from '../../components/CommonButton';\nimport CommonInputField from '../../components/CommonInputField';\nimport Wrapper from './Auth.styles';\nimport CommonWrapper from '../../components/CommonWrapper.styles';\n\nimport man from '../../images/man.png';\nimport hide from '../../images/hide.png';\nimport mail from '../../images/mail.png';\n\nconst signUpValidationSchema = new YupObject().shape({\n  email: new YupString().email('Invalid email address').required('Required'),\n  password: new YupString().required('Required'),\n  passwordRepeat: new YupString().when('password', {\n    is: (value: string) => (Boolean(value && value.length > 0)),\n    then: new YupString().oneOf(\n      [new YupRef('password')],\n      'Both passwords need to be the same',\n    ),\n  }),\n});\n\nconst SignUpForm = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      passwordRepeat: '',\n    },\n    validationSchema: signUpValidationSchema,\n    onSubmit: async (values) => {\n      try {\n        const response = await authAPI.signUp({\n          email: values.email,\n          password: values.password,\n        });\n        dispatch(setUser(response.data.user));\n\n        return navigate(`${routePath.home}`);\n      } catch (error) {\n        if (error instanceof AxiosError) {\n          const status = error.response?.status;\n          if (status === 403) {\n            formik.setErrors({\n              email: error.response?.data.data.message,\n            });\n          }\n        }\n      }\n    },\n  });\n\n  return (\n    <CommonWrapper>\n      <Wrapper>\n        <form\n          className=\"form-wrapper\"\n          onSubmit={formik.handleSubmit}\n        >\n          <h1 className=\"title\">\n            Sign Up\n          </h1>\n\n          <div className=\"input-wrapper\">\n            <CommonInputField\n              icon={mail}\n              name=\"email\"\n              placeholder=\"Email\"\n              fieldInputProps={formik.getFieldProps('email')}\n              error={formik?.touched.email ? formik?.errors.email : ''}\n            />\n            <p className=\"form__text\">\n              Enter your email\n            </p>\n\n            <CommonInputField\n              icon={hide}\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              fieldInputProps={formik.getFieldProps('password')}\n              error={formik?.touched.password ? formik?.errors.password : ''}\n            />\n            <p className=\"form__text\">\n              Enter your password\n            </p>\n\n            <CommonInputField\n              icon={hide}\n              type=\"password\"\n              name=\"passwordRepeat\"\n              placeholder=\"Password replay\"\n              fieldInputProps={formik.getFieldProps('passwordRepeat')}\n              error={formik?.touched.passwordRepeat ? formik?.errors.passwordRepeat : ''}\n            />\n            <p className=\"form__text\">\n              Repeat your password without errors\n            </p>\n          </div>\n          <CommonButton\n            size=\"permanent\"\n            text=\"Sign up\"\n          />\n        </form>\n        <img\n          className=\"image\"\n          src={man}\n        />\n      </Wrapper>\n    </CommonWrapper>\n  );\n};\n\nexport default SignUpForm;\n"],"names":["styled","props","isError","isSuccess","Boolean","error","success","className","src","icon","onClick","onClickOnIcon","hint","name","type","placeholder","disabled","value","fieldInputProps","Wrapper","signUpValidationSchema","YupObject","shape","email","YupString","required","password","passwordRepeat","when","is","length","then","oneOf","YupRef","dispatch","useAppDispatch","navigate","useNavigate","formik","useFormik","initialValues","validationSchema","onSubmit","values","authAPI","response","setUser","data","user","routePath","AxiosError","status","setErrors","message","handleSubmit","mail","getFieldProps","touched","errors","hide","size","text","man"],"sourceRoot":""}